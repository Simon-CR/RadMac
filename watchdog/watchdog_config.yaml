
# RadMac Watchdog Configuration
# Define per-service monitoring, intervals, and alert actions here.
#
# ------------------------------------------------------------------------------
# CONFIG VERSIONING
# ------------------------------------------------------------------------------
version: 1.2.4

# ------------------------------------------------------------------------------
# CONFIG CHANGE LOG
# ------------------------------------------------------------------------------
# v1.2.4 (2025-09-18):
#   - Enhanced database health monitoring to detect connection issues
#   - Added 'degraded' status for services with warnings but still functional
#   - Added 'recover' action for database connection cleanup and recovery
#   - Improved detection of NFS-related connection drops and stale connections
# v1.2.3 (2025-09-02):
#   - Fixed environment variable parsing to handle template strings gracefully
# v1.2.2 (2025-09-02):
#   - Fixed alert spam: actions now only trigger on status changes
#   - Added deployment-specific configuration examples
#   - Clarified restart action usage for Swarm vs single-host deployments
#   - Added comprehensive health monitoring for all services
# v1.2.1 (2025-09-02):
#   - Added direct health_url for db and radius services
#   - Added version field and config change log
#   - Changed default_interval key for clarity
#


# RadMac Watchdog Service Configuration
# NOTE: For Docker Swarm deployments, avoid 'restart' action as Swarm handles auto-recovery
# For single-host Docker Compose deployments, 'restart' action works perfectly
services:
  app:
    health_url: http://app:8080/health
    interval_env: WATCHDOG_CHECK_INTERVAL_APP
    default_interval: 30
    actions: [log, email, discord, pushbullet, slack, teams, telegram, webhook]  # Add 'restart' for single-host
  database:
    health_url: http://db:8080/health
    interval_env: WATCHDOG_CHECK_INTERVAL_DATABASE
    default_interval: 30
    actions: [log, recover, email, slack, webhook]  # Add 'restart' for single-host
  radius:
    health_url: http://radius:8080/health
    interval_env: WATCHDOG_CHECK_INTERVAL_RADIUS
    default_interval: 30
    actions: [log, telegram, webhook]  # Add 'restart' for single-host

# Supported actions:
#   log        - Log to stdout or file
#   email      - Send email (SMTP or service)  
#   discord    - Discord webhook
#   pushbullet - Pushbullet notification
#   slack      - Slack webhook
#   teams      - Microsoft Teams webhook
#   telegram   - Telegram bot message
#   webhook    - Generic webhook (custom URL)
#   restart    - Restart the affected container/service
#                * Works perfectly in single-host Docker Compose
#                * Not recommended for Docker Swarm (Swarm handles auto-recovery)
#   recover    - Execute service-specific recovery actions
#                * For database: cleans up stale connections and resets connection pools
#                * For other services: logs degraded state warnings

# Deployment-specific configurations available in examples/:
#   examples/single-host-config.yaml - Configuration with restart actions
#   examples/swarm-config.yaml       - Configuration without restart actions

# Example environment variables for notification credentials:
#
# EMAIL_HOST=smtp.example.com
# EMAIL_PORT=587
# EMAIL_USER=your@email.com
# EMAIL_PASSWORD=yourpassword
# EMAIL_TO=destination@email.com
#
# WATCHDOG_DISCORD_WEBHOOK_URL=https://discord.com/api/webhooks/...
# WATCHDOG_PUSHBULLET_TOKEN=your-pushbullet-token
# WATCHDOG_SLACK_WEBHOOK_URL=https://hooks.slack.com/services/...
# WATCHDOG_TEAMS_WEBHOOK_URL=https://outlook.office.com/webhook/...
# WATCHDOG_TELEGRAM_BOT_TOKEN=your-telegram-bot-token
# WATCHDOG_TELEGRAM_CHAT_ID=your-chat-id
# WATCHDOG_WEBHOOK_URL=https://your-custom-webhook-url
