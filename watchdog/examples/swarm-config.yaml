# RadMac Watchdog Configuration - Docker Swarm Optimized
# Use this configuration for Docker Swarm deployments
version: 1.2.4

# Docker Swarm Service Configuration
# NOTE: 'restart' action is DISABLED for Swarm as Swarm handles auto-recovery
# 'recover' action uses HTTP endpoints for cross-node compatibility
services:
  app:
    health_url: http://app:8080/health
    interval_env: WATCHDOG_CHECK_INTERVAL_APP
    default_interval: 30
    # Swarm-optimized actions: log + recover + notifications (NO restart)
    actions: [log, recover, email, slack, webhook]
  database:
    health_url: http://db:8080/health
    interval_env: WATCHDOG_CHECK_INTERVAL_DATABASE
    default_interval: 30
    # Database gets 'recover' for connection cleanup during NFS hiccups
    actions: [log, recover, email, slack, webhook, telegram]
  radius:
    health_url: http://radius:8080/health
    interval_env: WATCHDOG_CHECK_INTERVAL_RADIUS
    default_interval: 30
    # RADIUS typically needs immediate attention
    actions: [log, recover, email, slack, telegram, webhook]

# Swarm-Specific Action Strategy:
#   log      - Monitor health status changes and recovery actions
#   recover  - Execute service-specific recovery (HTTP-based for cross-node)
#   email    - Critical alerts for unhealthy services
#   slack    - Team notifications for degraded/unhealthy status
#   telegram - Immediate alerts for RADIUS issues
#   webhook  - Integration with monitoring systems (PagerDuty, etc.)
#
# Actions NOT used in Swarm:
#   restart     - Swarm auto-restarts unhealthy services
#   discord     - Not typically used for production ops
#   teams       - Optional, add if you use Microsoft Teams
#   pushbullet  - Personal notifications not needed for Swarm

# Supported actions:
#   log        - Log to stdout or file
#   email      - Send email (SMTP or service)
#   discord    - Discord webhook
#   pushbullet - Pushbullet notification
#   slack      - Slack webhook
#   teams      - Microsoft Teams webhook
#   telegram   - Telegram bot message
#   webhook    - Generic webhook (custom URL)
#   restart    - Restart the affected container/service (single-host only)

# Environment variables for notification credentials:
#
# EMAIL_HOST=smtp.example.com
# EMAIL_PORT=587
# EMAIL_USER=your@email.com
# EMAIL_PASSWORD=yourpassword
# EMAIL_TO=destination@email.com
#
# WATCHDOG_DISCORD_WEBHOOK_URL=https://discord.com/api/webhooks/...
# WATCHDOG_PUSHBULLET_TOKEN=your-pushbullet-token
# WATCHDOG_SLACK_WEBHOOK_URL=https://hooks.slack.com/services/...
# WATCHDOG_TEAMS_WEBHOOK_URL=https://outlook.office.com/webhook/...
# WATCHDOG_TELEGRAM_BOT_TOKEN=your-telegram-bot-token
# WATCHDOG_TELEGRAM_CHAT_ID=your-chat-id
# WATCHDOG_WEBHOOK_URL=https://your-custom-webhook-url
