---

services:
  db:
    image: simonclr/radmac-db:latest
    environment:
      MARIADB_ROOT_PASSWORD: ${MARIADB_ROOT_PASSWORD}
      MARIADB_DATABASE: ${DB_NAME}
      MARIADB_USER: ${DB_USER}
      MARIADB_PASSWORD: ${DB_PASSWORD}
    restart: unless-stopped
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "healthcheck.sh", "--connect", "--innodb_initialized"]
      start_period: 10s
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - webnet
  radius:
    image: simonclr/radmac-radius:latest
    depends_on:
      - db
    env_file:
      - .env
    ports:
      - "1812:1812/udp"
    restart: always
    networks:
      - webnet

  app:
    image: simonclr/radmac-app:latest
    env_file:
      - .env
    environment:
      - FLASK_APP=wsgi:app
      - FLASK_ENV=production
      - PYTHONPATH=/app
    restart: unless-stopped
    depends_on:
      - db
    networks:
      - webnet

  nginx:
    image: simonclr/radmac-nginx:latest
    ports:
      - "8080:80"
    depends_on:
      - app
    restart: unless-stopped
    networks:
      - webnet

  adminer:
    image: adminer
    restart: unless-stopped
    ports:
      - "8081:8080"  
    networks:
      - webnet

  # Optional: Health monitoring and automated remediation
  # Uncomment the watchdog service below to enable automated health monitoring
  # The watchdog monitors the /health endpoint and can restart services, send alerts, etc.
  # 
  # watchdog:
  #   image: simonclr/radmac-watchdog:latest
  #   restart: unless-stopped
  #   environment:
  #     - WATCHDOG_HEALTH_URL=http://app:8080/health
  #     - WATCHDOG_CHECK_INTERVAL=30
  #     - WATCHDOG_ACTIONS=log,webhook
  #     - WATCHDOG_WEBHOOK_URL=${WATCHDOG_WEBHOOK_URL:-}
  #     - WATCHDOG_MAX_RESTART_ATTEMPTS=3
  #     - WATCHDOG_CONTAINER_PREFIX=radmac
  #   volumes:
  #     # Uncomment the line below to enable container restart functionality
  #     # - /var/run/docker.sock:/var/run/docker.sock
  #   depends_on:
  #     - app
  #   networks:
  #     - webnet

volumes:
  db_data:

networks:
  webnet:
    name: webnet